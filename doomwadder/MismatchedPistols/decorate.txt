// AUTHOR'S NOTE:
// To change the handing controls of the VSP and Spectre,
// Go to lines 70 and 145 and edit the code accordingly.

ACTOR Pistols : Weapon //replaces Pistol
{
  Weapon.SelectionOrder 2500
  Weapon.AmmoUse 1
  Weapon.AmmoGive 36
  Weapon.AmmoType "Clip"
  Inventory.PickupMessage "Picked up some mismatched pistols! Sure, they'll work in a pinch. (2)"
  
  decal BulletChip

  +WEAPON.NOALERT
  
  Weapon.Slotnumber 2
  Tag "Mismatched Pistols"

  States
  {
  
  Spawn:
    AKPP A -1
    Stop
  
  Ready:
    TNT1 A 1 A_WeaponReady(WRF_NOFIRE)
	Loop

  Select:
    TNT1 A 0 {
		A_PlaySound("Weapon/WhooshSFX", 6, 1);
		A_PlaySound("Weapon/AKPRaise",  5, 1);
		A_ZoomFactor(1);
		A_Light0;
	}
	TNT1 A 1  A_Raise
	TNT1 AAAAAAAAAAAAAA 0 A_Raise
	Goto RaiseAnim
  RaiseAnim:
	AKPL DCBA 1
	TNT1 A 0 {A_Overlay(3, "IdleR"); A_Overlay(-3, "IdleL");}
    Goto Ready

  Deselect:
    TNT1 A 0 {
		A_Overlay(3, ""); A_Overlay(-3, "");
		A_PlaySound("Weapon/WhooshSFX", 6, 1);
		A_TakeInventory("SpectreAmmo");
		A_TakeInventory("VSPAmmo");	
		A_ZoomFactor(1);
		A_Light0;
	}
	AKPL ABCD 1
	Goto LowerAnim
  LowerAnim:
	TNT1 AAAAAAAAAAAA 0 A_Lower
	TNT1 A 1 A_Lower
	Loop
	
  Fire:
    Goto Ready
	
// - - - - - - - - VSP STATES - - - - - - - -

  IdleL:
	TNT1 A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & BT_RELOAD, 	"ReloadL")
	// Note: Swap BT_ALTATTACK with BT_ATTACK to swap handing.
    VSPI A 1 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK, "FireL")
	Loop
	
  FireL:
    VSPF A 1 Bright {
		A_FireBullets(2, 1, -1, 4);
		A_PlaySound("Weapon/VSPFire", 5, 1);
		A_GiveInventory("VSPAmmo", 1);
		A_AlertMonsters;
		A_ZoomFactor(0.966 + 0.001 * Random(0, 5));
		A_Light2;
	}
	VSPF B 2 Bright {
		A_ZoomFactor(1);
		A_Light1;
	}
	TNT1 A 0 Offset(-2, -1)
	TNT1 A 0 A_CheckReload
	VSPF A 1 Bright {
		A_FireBullets(4, 1, -1, 4);
		A_PlaySound("Weapon/VSPFire", 5, 0.66);
		A_AlertMonsters;
		A_ZoomFactor(0.975 + 0.001 * Random(0, 5));
		A_Light2;
	}
	VSPF B 2 Bright {
		A_ZoomFactor(1);
		A_Light1;
	}
	TNT1 A 0 Offset(-2, -1)
	TNT1 A 0 A_CheckReload
	VSPF A 1 Bright {
		A_FireBullets(6, 2, -1, 4);
		A_PlaySound("Weapon/VSPFire", 5, 0.50);
		A_AlertMonsters;
		A_ZoomFactor(0.990 + 0.001 * Random(0, 5));
		A_Light2;
	}
	VSPF B 2 Bright {
		A_ZoomFactor(1);
		A_Light1;
	}
	TNT1 A 0 A_CheckReload
	goto EndFireL
	
  EndFireL:
	VSPF C 2 A_Light0
	TNT1 A 0 Offset(2, 1)
	TNT1 A 0 A_JumpIfInventory("VSPAmmo", 6, "LastL")	// Keeps slide open if last bullet was fired
	VSPF D 2 Offset(2, 1)
	VSPI A 1
	Goto IdleL
	
  LastL:
	VSPF C 2 Offset(-2, -1)
	VSPI B 1 Offset(2, 1)
	Goto ReloadL

  ReloadL:
 	TNT1 A 0 A_PlaySound("Weapon/WhooshSFX", 7, 1)
    VSPE ABC 1
	TNT1 A 4
	TNT1 A 3 A_PlaySound("Weapon/VSPR1", 6, 1)
	TNT1 A 2 A_TakeInventory("VSPAmmo")
	TNT1 A 2 A_PlaySound("Weapon/VSPR2", 6, 1)
	TNT1 A 3 A_PlaySound("Weapon/VSPR3", 6, 1)
	TNT1 A 4 A_PlaySound("Weapon/WhooshSFX", 6, 1)
	VSPR ABC 1
	Goto IdleL

// - - - - - - - - SPECTRE STATES - - - - - - - -

  IdleR:
	TNT1 A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & BT_RELOAD, "ReloadR")
	// Note: Swap BT_ATTACK with BT_ALTATTACK to swap handing.
	BASI A 1 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & BT_ATTACK, "FireR")
	Loop
	
  FireR:
    BASF A 1 Bright {
		A_FireBullets(1, 0, -1, 6);
		A_PlaySound("Weapon/SpectreFire", 1, 1);
		A_GiveInventory("SpectreAmmo", 1);
		A_AlertMonsters;
		A_ZoomFactor(0.980 + 0.001 * Random(0, 5));
		A_Light2;
	}
	BASF B 2 Bright {
		A_Light1;
		A_ZoomFactor(1);
	}
	TNT1 A 0 A_CheckReload
	BASF C 2 A_Light0
	BASF C 0 A_JumpIfInventory("SpectreAmmo", 18, "LastR")	// Keeps slide open if last bullet was fired
	BASF D 4
	Goto IdleR
	
  LastR:
	BASF C 1 Offset(2, -1) A_Light0
	BASI B 1 Offset(-2, 1)
	Goto ReloadR
	
  ReloadR:
	TNT1 A 0 A_PlaySound("Weapon/WhooshSFX", 7, 1)
	BASE ABC 1 
	TNT1 A 5 
	TNT1 A 4 A_PlaySound("Weapon/SpectreR1", 7, 1)
	TNT1 A 3 A_TakeInventory("SpectreAmmo")
	TNT1 A 3 A_PlaySound("Weapon/SpectreR2", 7, 1)
	TNT1 A 4 A_PlaySound("Weapon/SpectreR3", 7, 1)
	TNT1 A 5 A_PlaySound("Weapon/WhooshSFX", 7, 1)
	BASR ABC 1
	Goto IdleR
  }
}

ACTOR SpectreAmmo : Inventory {Inventory.MaxAmount 18 +IGNORESKILL}
ACTOR VSPAmmo	  : Inventory {Inventory.MaxAmount 6  +IGNORESKILL}	// Actually 18 rounds, but counted as the number of bursts